basePath: /api/v1
definitions:
  handler.HandleAddUserTodo.payload:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  handler.HandleGetAccessToken.payload:
    properties:
      refresh_token:
        type: string
    type: object
  handler.HandlePatchUserTodo.payload:
    additionalProperties: true
    type: object
  handler.HandleUpdateUserTodo.payload:
    properties:
      description:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  handler.HandleUserLogin.payload:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handler.HandleUserRegister.payload:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  utils.HTTPReponse:
    properties:
      data: {}
      error:
        type: boolean
      message:
        type: string
    type: object
info:
  contact:
    email: manjit2003@proton.me
    name: Manjeet Pardeshi
  description: This is my submission to the assignment as requested by Samespace.
  title: Samespace Assignment
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: |-
        Returns the access token and refresh token upon successfull login
        Please note that the accessToken will be valid only for 10 mins
      parameters:
      - description: data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.HandleUserLogin.payload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
      summary: Login into your account
      tags:
      - Authentication
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Return's new access token from the refresh token
      parameters:
      - description: data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.HandleGetAccessToken.payload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
      summary: Get new access token
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account to add todos
      parameters:
      - description: data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.HandleUserRegister.payload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
      summary: Create new user account
      tags:
      - Authentication
  /todos:
    get:
      description: Returns a paginated list of TODO items for a user, with support
        for status filtering and pagination.
      parameters:
      - description: TODO status (e.g., pending, completed)
        in: query
        name: status
        type: string
      - description: The field to sort. (e.g., created.asc, updated.asc)
        in: query
        name: sort
        type: string
      - description: Pagination state
        in: query
        name: page_state
        type: string
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Todos fetched
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
      security:
      - ApiKeyAuth: []
      summary: Get user's TODOs in paginated form
      tags:
      - Todos
    post:
      consumes:
      - application/json
      description: Adds a new todo item for a user with the provided title and description.
        Requires user authentication.
      parameters:
      - description: Todo item data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.HandleAddUserTodo.payload'
      produces:
      - application/json
      responses:
        "200":
          description: Todo item added successfully
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
      security:
      - ApiKeyAuth: []
      summary: Add a new todo item
      tags:
      - Todos
  /todos/{id}:
    delete:
      description: Deletes a todo item for a user by its ID. Requires user authentication.
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Todo item deleted successfully
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a todo item
      tags:
      - Todos
    patch:
      consumes:
      - application/json
      description: Partially updates a todo item for a user with the provided fields.
        Requires user authentication.
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial todo item data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.HandlePatchUserTodo.payload'
      produces:
      - application/json
      responses:
        "200":
          description: Todo item updated successfully
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
      security:
      - ApiKeyAuth: []
      summary: Partially update a todo item
      tags:
      - Todos
    put:
      consumes:
      - application/json
      description: Updates a todo item for a user with the provided title, description,
        and status. Requires user authentication.
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Todo item data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.HandleUpdateUserTodo.payload'
      produces:
      - application/json
      responses:
        "200":
          description: Todo item updated successfully
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.HTTPReponse'
      security:
      - ApiKeyAuth: []
      summary: Update a todo item
      tags:
      - Todos
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
